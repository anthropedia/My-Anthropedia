<% layout("./layout") %>

<div class="container-fluid">
  <div class="row">
    <div class="col-md-12">
      <h1>Coaching Session</h1>
      <div id="mediaPlayer" class="position-relative mb-3"></div>
      <div class="error" id="error" hidden></div>
    </div>
    <div>
      <button class="btn btn-primary" id="pause">I am ready</button>
      <button class="btn btn-primary" id="mute" hidden>Mute/Unmute</button>
    </div>
  </div>
</div>

<script src="https://player.vdocipher.com/v2/api.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io()
  const room = "<%= it.token %>"
  const readyButton = document.getElementById("pause")
  const muteButton = document.getElementById("mute")
  const errorNode = document.getElementById("error")
  let video = null
  let vdocipherLocked = true // vdoCipher locks autoplay on load
  let latestServerEvent = null // Store the latest event from the server
  let serverPlaybackState = { playing: false, currentTime: 0 } // Tracks server state

  socket.emit('join', room)

  socket.on("error", (error) => {
    // console.error(error)
    errorNode.textContent = error + ". Check with your coach."
    errorNode.hidden = false
  })

  socket.on('message', (data) => {
    console.info('client received', data)
    if (data.mediaScript) {
      const mediaPlayer = document.getElementById("mediaPlayer")
      mediaPlayer.innerHTML = data.mediaScript
      mediaPlayer.querySelector("iframe").src += "&autoplay=true&controls=off"
      initPlayer(data)
    }

    if (data.event) {
      // Update server playback state and store the latest event
      serverPlaybackState = {
        playing: data.event === "play",
        currentTime: data.currentTime || serverPlaybackState.currentTime
      }
      latestServerEvent = data
    }

    if (!vdocipherLocked) {
      applyServerEvent(latestServerEvent)
    }
  })

  readyButton.addEventListener("click", () => {
    if (vdocipherLocked) {
      vdocipherLocked = false
      readyButton.textContent = "Pause" // Change button text after enabling

      // Apply the latest server event when unlocking playback
      if (latestServerEvent) {
        applyServerEvent(latestServerEvent)
      }
    }
    socket.emit("message", {
      room,
      content: {
        event: "pause",
        currentTime: video.currentTime
      }
    })
  })

  function applyServerEvent(data) {
    if (data && video) {
      if (data.event === "play") {
        video.currentTime = data.currentTime || 0
        video.play()
      }
      if (data.event === "pause") {
        video.currentTime = data.currentTime || 0
        video.pause()
      }
      if (data.event === "seeked") {
        video.currentTime = data.currentTime || 0
      }
    }
  }

  function initPlayer(data) {
    const player = VdoPlayer.getInstance(document.querySelector("iframe"))
    window.player = player
    video = player.video

    setTimeout(() => {
      video.currentTime = data.currentTime
      video.pause()
    }, 1000)
  }
</script>

<style>
  /* Your existing styles remain the same */
  .session-controls {
    background: #f8f9fa;
    padding: 1rem;
    border-radius: 0.5rem;
    margin-bottom: 1rem;
  }

  #sessionInfo .alert {
    margin-bottom: 0;
  }

  .video-container {
    position: relative;
    margin-bottom: 1rem;
  }
</style>
